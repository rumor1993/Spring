<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 

<mapper namespace="bbs">
 	<insert id="insert" parameterType="bbs">
 		insert into bbs6 values(bbs6_num_seq.nextval,#{bbs_name},#{bbs_pass},
 						#{bbs_subject},#{bbs_content},#{bbs_file, jdbcType=VARCHAR},
 						bbs6_num_seq.nextval,0,0,
 						0,SYSDATE,#{bbs_original, jdbcType=VARCHAR}
 		)
 	</insert>
 	
 	<select id="count" resultType="int">
 		select count(*) from bbs6
 	</select>
 	
 	<select id="list" parameterType="int" resultType="bbs">
 		<![CDATA[
		select *
		from (select rownum rnum, bbs_num, bbs_name,
					 bbs_subject, bbs_content, bbs_file,
					 bbs_re_ref, bbs_re_lev,
					 bbs_re_seq, bbs_readcount, bbs_date, bbs_original
		from (select * from bbs6
		order by bbs_re_ref desc, bbs_re_seq asc)
		)
		where rnum >= ((#{page}-1) * 10 + 1) and rnum <= (#{page} * 10)
		]]>
 	</select>
 	
	 <select id="cont" parameterType="int" resultType="bbs">
	 	select * from bbs6 where bbs_num = #{num}
	 </select>
	 
	 <update id="hit" parameterType="int">
	 	update bbs6 set bbs_readcount = bbs_readcount +1 where bbs_num = #{num}
	 </update>
	 
	 <update id="edit" parameterType="bbs">
	 	update bbs6 set bbs_subject = #{bbs_subject},
	 	 bbs_content = #{bbs_content},
	 	 bbs_file = #{bbs_file, jdbcType=VARCHAR}, 
	 	 bbs_original = #{bbs_original, jdbcType=VARCHAR} 
	 	 where bbs_num = #{bbs_num}
	 </update>
	 
	 <delete id="del" parameterType="int">
	 	delete bbs6 where bbs_num = #{bbs_num}
	 </delete>
	 
	 <insert id="reply" parameterType="bbs">
	 	insert into bbs6 values(
	 					bbs6_num_seq.nextval,#{bbs_name},#{bbs_pass},
 						#{bbs_subject},#{bbs_content},#{bbs_file, jdbcType=VARCHAR},
 						#{bbs_re_ref},#{bbs_re_lev},#{bbs_re_seq},
 						0,SYSDATE,#{bbs_original, jdbcType=VARCHAR}
 		)
	 </insert>
	 
	 <!-- 자료 검색 -->
	 <select id="find" parameterType="hashmap" resultType="bbs">
	 	 		
		select *
		from (select rownum rnum, bbs_num, bbs_name,
					 bbs_subject, bbs_content, bbs_file,
					 bbs_re_ref, bbs_re_lev,
					 bbs_re_seq, bbs_readcount, bbs_date, bbs_original
		from (select * from bbs6 <where>
	 		<!-- 검색 조건이 없는 경우 -->
	 		<if test="find_field==''">
	 		</if>
	 		<!-- 검색 조건이 글쓴이인 경우 -->
	 		<if test="find_field=='bbs_name'">
	 			bbs_name like #{find_name}
	 		</if>
	 		<!-- 검색 조건이 제목인 경우 -->
	 		<if test="find_field=='bbs_subject'">
	 			bbs_subject like #{find_name}
	 		</if>
	 		<!-- 검색 조건이내용인 경우 -->
	 		<if test="find_field=='bbs_content'">
	 			bbs_content like #{find_name}
	 		</if>
	 	</where>
		order by bbs_re_ref desc, bbs_re_seq asc )
		)
		<![CDATA[
		where rnum >= ((#{page}-1) * 10 + 1) and rnum <= (#{page} * 10)
		]]>
		
	 </select>
	 	
	 <select id="findcount" parameterType="hashmap" resultType="int">
	 	select count(*) from bbs6 
	 	<!-- 
	 	MyBatis 동적 SQL문 
	 	<where>태그는 where절을 반환 합니다.
	 	<where>안의 하위 태그를 실행하고 반환값이 있의면 where 절을 만들어 반환하고
	 	반환값이 없으면 where 절을 반환하지 않습니다.
	 	-->
	 	<where>
	 		<!-- 검색 조건이 없는 경우 -->
	 		<if test="find_field==''">
	 		</if>
	 		<!-- 검색 조건이 글쓴이인 경우 -->
	 		<if test="find_field=='bbs_name'">
	 			bbs_name like #{find_name}
	 		</if>
	 		<!-- 검색 조건이 제목인 경우 -->
	 		<if test="find_field=='bbs_subject'">
	 			bbs_subject like #{find_name}
	 		</if>
	 		<!-- 검색 조건이내용인 경우 -->
	 		<if test="find_field=='bbs_content'">
	 			bbs_content like #{find_name}
	 		</if>
	 	</where>
	 </select>
	 
	  	<select id="listview" parameterType="map" resultType="bbs">
 		<![CDATA[
		select *
		from (select rownum rnum, bbs_num, bbs_name,
					 bbs_subject, bbs_content, bbs_file,
					 bbs_re_ref, bbs_re_lev,
					 bbs_re_seq, bbs_readcount, bbs_date, bbs_original
		from (select * from bbs6
		order by bbs_re_ref desc, bbs_re_seq asc)
		)
		where rnum >= ((#{page}-1) * #{limit} + 1) and rnum <= (#{page} * #{limit})
		]]>
 	</select>
</mapper>